name: CI

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

env: 
  CARGO_TERM_COLOR: always

jobs:
  style:
    name: Check Style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('Cargo.lock') }}
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          override: true
      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Install dependencies
        run: "sudo apt-get update && sudo apt-get install -y libatk1.0-dev libgtk-3-dev"
      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
  test:
    name: Run Tests
    needs: [style]
    strategy:
      matrix:
        target:
          - on: ubuntu-latest
            deps: "sudo apt-get update && sudo apt-get install -y libatk1.0-dev libgtk-3-dev"
          - on: macos-latest
            deps: "echo ok"
          - on: windows-latest
            deps: "echo ok"
    runs-on: "${{ matrix.target.on }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
      - name: Install dependencies
        run: "${{ matrix.target.deps }}"
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-features
  release:
    name: Release
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        target:
          - on: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            deps: "sudo apt-get update && sudo apt-get install -y libatk1.0-dev libgtk-3-dev"
            releaser: "zip -j bandcamper-linux-x64.zip target/x86_64-unknown-linux-gnu/release/bandcamper"
            releasefile: "bandcamper-linux-x64.zip"
          - on: macos-latest
            target: x86_64-apple-darwin
            deps: "echo ok"
            releaser: "zip -j bandcamper-macos-x64.zip target/x86_64-apple-darwin/release/bandcamper"
            releasefile: "bandcamper-macos-x64.zip"
          - on: windows-latest
            target: x86_64-pc-windows-gnu
            deps: "echo ok"
            releaser: "'C:\\Program Files\\7-Zip\\7z.exe' a -tzip bandcamper-windows-x64.zip .\\\\target\\\\x86_64-pc-windows-gnu\\\\release\\\\bandcamper.exe"
            releasefile: "bandcamper-windows-x64.zip"
    runs-on: "${{ matrix.target.on }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
      - name: Install dependencies
        run: "${{ matrix.target.deps }}"
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target.target }}
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: build
          args: --release --target ${{ matrix.target.target }}
      - name: Package
        shell: bash
        run: "${{ matrix.target.releaser }}"
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: ${{ matrix.target.releasefile }}
          fail_on_unmatched_files: true
